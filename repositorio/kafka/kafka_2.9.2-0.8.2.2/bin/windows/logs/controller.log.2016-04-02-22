[2016-04-02 22:10:53,502] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-02 22:10:53,998] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-02 22:10:54,014] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-02 22:10:54,014] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-02 22:10:54,029] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-02 22:10:54,029] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-02 22:10:55,176] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-02 22:10:55,192] INFO [Controller 0]: Initialized controller epoch to 3 and zk version 2 (kafka.controller.KafkaController)
[2016-04-02 22:10:55,395] INFO [Controller 0]: Controller 0 incremented epoch to 4 (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: List of topics ineligible for deletion: test,iotdogs (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Controller 0]: Current list of topics in the cluster: Set(test, iotdogs) (kafka.controller.KafkaController)
[2016-04-02 22:10:55,442] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=test,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=iotdogs,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-02 22:10:55,481] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [test,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:10:55,559] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [iotdogs,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:10:55,559] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([test,0] -> OfflinePartition, [iotdogs,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-02 22:10:55,559] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2016-04-02 22:10:55,559] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-02 22:10:55,559] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-02 22:10:55,668] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-02 22:11:00,692] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:11:00,692] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:11:00,692] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:11:00,692] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:11:05,884] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-02 22:11:05,915] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-02 22:11:05,915] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-04-02 22:11:05,915] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:Oscar,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-02 22:11:05,915] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-04-02 22:11:05,915] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-02 22:11:05,915] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test,Partition=0,Replica=0],[Topic=iotdogs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-04-02 22:11:05,930] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [test,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:11:05,930] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition [test,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:11:05,977] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([test,0] -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4), [iotdogs,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3)) (kafka.controller.PartitionStateMachine)
[2016-04-02 22:11:05,993] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [iotdogs,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:11:05,993] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition [iotdogs,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:11:06,040] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([test,0] -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4), [iotdogs,0] -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-04-02 22:11:06,040] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children test,iotdogs (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-02 22:11:06,040] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-02 22:11:06,055] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/test (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-02 22:11:06,071] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/iotdogs (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-02 22:11:06,180] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-02 22:11:06,196] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-02 22:11:35,925] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 4 fails to send request Name:UpdateMetadataRequest;Version:0;Controller:0;ControllerEpoch:4;CorrelationId:9;ClientId:id_0-host_null-port_9092;AliveBrokers:id:0,host:Oscar,port:9092;PartitionState:[test,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0),[iotdogs,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:Oscar,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.net.SocketTimeoutException
	at sun.nio.ch.SocketAdaptor$SocketInputStream.read(SocketAdaptor.java:229)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:385)
	at kafka.utils.Utils$.read(Utils.scala:380)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:133)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-04-02 22:11:35,925] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:Oscar,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-02 22:12:06,245] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 4 fails to send request Name:UpdateMetadataRequest;Version:0;Controller:0;ControllerEpoch:4;CorrelationId:9;ClientId:id_0-host_null-port_9092;AliveBrokers:id:0,host:Oscar,port:9092;PartitionState:[test,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0),[iotdogs,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:Oscar,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.net.SocketTimeoutException
	at sun.nio.ch.SocketAdaptor$SocketInputStream.read(SocketAdaptor.java:229)
	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103)
	at java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:385)
	at kafka.utils.Utils$.read(Utils.scala:380)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:133)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-04-02 22:12:06,245] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:Oscar,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-02 22:16:00,687] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:16:00,687] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:16:00,687] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:16:00,687] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:21:00,677] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:21:00,678] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:21:00,679] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:21:00,679] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:26:00,683] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:26:00,683] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:26:00,683] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:26:00,683] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:31:00,681] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:31:00,681] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:31:00,681] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:31:00,681] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:36:00,690] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:36:00,690] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:36:00,690] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:36:00,690] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:38:48,175] INFO [Controller 0]: Shutting down broker 0 (kafka.controller.KafkaController)
[2016-04-02 22:38:48,191] DEBUG [Controller 0]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2016-04-02 22:38:48,191] DEBUG [Controller 0]: Live brokers:  (kafka.controller.KafkaController)
[2016-04-02 22:38:48,206] TRACE [Controller 0]: All leaders = [test,0] -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4),[iotdogs,0] -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4) (kafka.controller.KafkaController)
[2016-04-02 22:41:37,835] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2016-04-02 22:41:37,913] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-02 22:41:37,929] INFO [Controller 0]: Initialized controller epoch to 4 and zk version 3 (kafka.controller.KafkaController)
[2016-04-02 22:41:37,960] INFO [Controller 0]: Controller 0 incremented epoch to 5 (kafka.controller.KafkaController)
[2016-04-02 22:41:38,069] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-02 22:41:38,069] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-02 22:41:38,069] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-02 22:41:38,085] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-02 22:41:38,085] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-02 22:41:38,085] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-02 22:41:38,085] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-02 22:41:38,085] INFO [Controller 0]: List of topics ineligible for deletion: test,iotdogs (kafka.controller.KafkaController)
[2016-04-02 22:41:38,101] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-02 22:41:38,101] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-02 22:41:38,101] INFO [Controller 0]: Current list of topics in the cluster: Set(test, iotdogs) (kafka.controller.KafkaController)
[2016-04-02 22:41:38,101] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=test,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=iotdogs,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-02 22:41:38,132] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [test,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:41:38,163] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [iotdogs,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:41:38,179] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([test,0] -> OfflinePartition, [iotdogs,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-02 22:41:38,179] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2016-04-02 22:41:38,179] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-02 22:41:38,194] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-02 22:41:38,241] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-02 22:41:38,257] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2016-04-02 22:41:43,257] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:41:43,257] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:41:43,257] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:41:43,257] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:41:47,594] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-02 22:41:47,672] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-02 22:41:47,687] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-04-02 22:41:47,687] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:Oscar,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-02 22:41:47,703] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-02 22:41:47,703] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-04-02 22:41:47,719] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test,Partition=0,Replica=0],[Topic=iotdogs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-04-02 22:41:47,750] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [test,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:41:47,766] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":4,"isr":[0]} for offline partition [test,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:41:47,797] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([test,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5), [iotdogs,0] -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-04-02 22:41:47,812] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [iotdogs,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:41:47,812] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":4,"isr":[0]} for offline partition [iotdogs,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-02 22:41:47,859] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([test,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5), [iotdogs,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:5)) (kafka.controller.PartitionStateMachine)
[2016-04-02 22:46:43,268] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:46:43,268] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:46:43,268] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:46:43,268] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:51:43,267] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:51:43,267] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:51:43,267] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:51:43,267] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2016-04-02 22:56:43,261] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-02 22:56:43,261] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([test,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-02 22:56:43,261] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-02 22:56:43,261] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
