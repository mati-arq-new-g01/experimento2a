[2016-04-03 19:02:37,144] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2016-04-03 19:02:37,281] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-03 19:02:37,300] INFO [Controller 0]: Controller 0 incremented epoch to 1 (kafka.controller.KafkaController)
[2016-04-03 19:02:37,372] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-03 19:02:37,375] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-03 19:02:37,379] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-03 19:02:37,458] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-03 19:02:37,460] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-03 19:02:37,465] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-03 19:02:37,479] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-03 19:02:37,481] INFO [Controller 0]: List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2016-04-03 19:02:37,498] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-03 19:02:37,501] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-03 19:02:37,503] INFO [Controller 0]: Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-03 19:02:37,519] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2016-04-03 19:02:37,543] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2016-04-03 19:02:37,547] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2016-04-03 19:02:37,552] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-03 19:02:37,559] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-03 19:02:37,582] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-03 19:02:37,586] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2016-04-03 19:02:38,059] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-03 19:02:38,204] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-03 19:02:38,209] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-04-03 19:02:38,232] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:38335708ef71,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-03 19:02:38,242] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-03 19:02:38,244] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-04-03 19:02:42,590] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:02:42,601] DEBUG [Controller 0]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-04-03 19:05:38,591] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children iotdogs (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-03 19:05:38,669] INFO [TopicChangeListener on Controller 0]: New topics: [Set(iotdogs)], deleted topics: [Set()], new partition replica assignment [Map([iotdogs,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-03 19:05:38,672] INFO [Controller 0]: New topic creation callback for [iotdogs,0] (kafka.controller.KafkaController)
[2016-04-03 19:05:38,683] INFO [Controller 0]: New partition creation callback for [iotdogs,0] (kafka.controller.KafkaController)
[2016-04-03 19:05:38,686] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [iotdogs,0] (kafka.controller.PartitionStateMachine)
[2016-04-03 19:05:38,732] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=iotdogs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-04-03 19:05:38,748] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [iotdogs,0] (kafka.controller.PartitionStateMachine)
[2016-04-03 19:05:38,754] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [iotdogs,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2016-04-03 19:05:38,762] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [iotdogs,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2016-04-03 19:05:38,844] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=iotdogs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-04-03 19:07:42,585] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:07:42,586] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:07:42,595] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:07:42,599] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:12:42,589] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:12:42,590] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:12:42,590] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:12:42,591] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:17:42,586] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:17:42,587] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:17:42,588] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:17:42,588] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:22:42,584] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:22:42,585] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:22:42,585] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:22:42,586] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:27:42,584] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:27:42,585] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:27:42,587] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:27:42,587] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:32:42,585] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:32:42,587] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:32:42,588] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:32:42,590] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:37:42,584] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:37:42,585] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:37:42,585] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:37:42,586] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:42:42,584] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:42:42,585] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:42:42,586] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:42:42,586] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:47:42,585] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:47:42,586] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:47:42,586] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:47:42,586] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:52:42,584] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:52:42,586] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:52:42,586] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:52:42,586] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-03 19:57:42,590] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-03 19:57:42,591] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-03 19:57:42,591] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-03 19:57:42,592] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
