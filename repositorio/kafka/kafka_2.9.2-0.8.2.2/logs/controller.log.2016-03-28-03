[2016-03-28 03:28:35,125] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2016-03-28 03:28:35,311] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-03-28 03:28:35,349] INFO [Controller 0]: Controller 0 incremented epoch to 1 (kafka.controller.KafkaController)
[2016-03-28 03:28:35,473] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-03-28 03:28:35,479] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-03-28 03:28:35,484] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-03-28 03:28:35,519] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-03-28 03:28:35,527] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-03-28 03:28:35,533] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-03-28 03:28:35,566] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-03-28 03:28:35,569] INFO [Controller 0]: List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2016-03-28 03:28:35,601] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-03-28 03:28:35,605] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-03-28 03:28:35,609] INFO [Controller 0]: Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2016-03-28 03:28:35,650] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2016-03-28 03:28:35,708] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2016-03-28 03:28:35,714] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2016-03-28 03:28:35,724] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-03-28 03:28:35,736] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-03-28 03:28:35,776] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-03-28 03:28:35,782] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2016-03-28 03:28:36,553] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-03-28 03:28:36,723] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-03-28 03:28:36,730] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-03-28 03:28:36,820] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:dd574c3cd105,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-03-28 03:28:36,844] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-03-28 03:28:36,849] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-03-28 03:28:40,787] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-03-28 03:28:40,801] DEBUG [Controller 0]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-03-28 03:28:48,224] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children iotdogs (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-03-28 03:28:48,394] INFO [TopicChangeListener on Controller 0]: New topics: [Set(iotdogs)], deleted topics: [Set()], new partition replica assignment [Map([iotdogs,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-03-28 03:28:48,397] INFO [Controller 0]: New topic creation callback for [iotdogs,0] (kafka.controller.KafkaController)
[2016-03-28 03:28:48,408] INFO [Controller 0]: New partition creation callback for [iotdogs,0] (kafka.controller.KafkaController)
[2016-03-28 03:28:48,411] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [iotdogs,0] (kafka.controller.PartitionStateMachine)
[2016-03-28 03:28:48,495] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=iotdogs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-03-28 03:28:48,520] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [iotdogs,0] (kafka.controller.PartitionStateMachine)
[2016-03-28 03:28:48,531] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [iotdogs,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2016-03-28 03:28:48,547] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [iotdogs,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2016-03-28 03:28:48,668] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=iotdogs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-03-28 03:33:40,781] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-03-28 03:33:40,782] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-03-28 03:33:40,792] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-03-28 03:33:40,797] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-03-28 03:38:40,780] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-03-28 03:38:40,781] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-03-28 03:38:40,781] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-03-28 03:38:40,782] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-03-28 03:43:40,780] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-03-28 03:43:40,781] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-03-28 03:43:40,781] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-03-28 03:43:40,782] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-03-28 03:48:40,781] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-03-28 03:48:40,782] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-03-28 03:48:40,782] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-03-28 03:48:40,783] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-03-28 03:53:40,780] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-03-28 03:53:40,781] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-03-28 03:53:40,781] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-03-28 03:53:40,782] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-03-28 03:58:40,780] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-03-28 03:58:40,781] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-03-28 03:58:40,781] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-03-28 03:58:40,782] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
